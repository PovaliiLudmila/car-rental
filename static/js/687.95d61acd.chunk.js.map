{"version":3,"file":"static/js/687.95d61acd.chunk.js","mappings":"qTAIaA,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAcjB,OACE,UAAC,KAAD,CAAKC,GAAG,OAAOC,SAbI,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfP,GACEQ,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAGrCL,EAAKO,OACN,EAGwCC,GAAG,IAAIC,GAAG,OAAjD,WACE,UAAC,KAAD,CAAaC,GAAG,QAAQC,YAAU,EAAlC,WACE,SAAC,IAAD,CAAWC,OAAQ,CAAEC,MAAO,YAA5B,oBACA,SAAC,EAAAC,EAAD,CACEC,YAAY,4BACZC,MAAM,OACNC,KAAK,QACLC,KAAK,cAGT,UAAC,KAAD,CAAaC,GAAG,OAAOT,GAAG,WAAWC,YAAU,EAA/C,WACE,SAAC,IAAD,CAAWC,OAAQ,CAAEC,MAAO,YAA5B,uBACA,SAAC,EAAAC,EAAD,CACEC,YAAY,wBACZC,MAAM,OACNC,KAAK,WACLC,KAAK,iBAGT,SAAC,IAAD,CAAQC,GAAG,OAAOC,YAAY,OAAOC,QAAQ,QAAQJ,KAAK,SAA1D,sBAKL,ECvCc,SAASK,IACtB,OACE,UAAC,IAAD,CAAWC,KAAK,MAAMC,eAAa,EAAnC,WACE,SAACC,EAAA,EAAD,WACE,wCAEF,UAAC,KAAD,CAAKC,QAAQ,IAAIP,GAAG,KAApB,WACE,SAAC,IAAD,CAASQ,KAAK,KAAd,8CACA,SAAClC,EAAD,IAFF,yBAGyB,KACvB,SAAC,KAAD,CAAMmC,GAAG,YAAYC,MAAO,CAAEC,eAAgB,aAA9C,iCAMP,C,2KCVGC,GAAYC,EAAAA,EAAAA,IAAW,SAAoBC,EAAOT,GAClD,IAAF,GAA8CU,EAAAA,EAAAA,IAAiBD,GAAvDE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,cAAkBC,GAArC,YACMC,GAASC,EAAAA,EAAAA,IAAe,YAAaN,GAC3C,OAAuBO,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,KADwB,gBAGtBjB,IAAAA,EACAW,WAAWO,EAAAA,EAAAA,IAAG,mBAAoBP,IAC/BE,GALmB,IAMtBM,OAAK,kBACAL,GACAF,GAAiB,CAClBQ,QAAS,OACTC,cAAe,SACf,WAAY,aAKrB,IACDd,EAAU,YAAc,W,2JCpBpBA,GAAUC,EAAAA,EAAAA,IAAW,SAAkBI,EAAOH,GAC9C,IAAIE,GAASI,EAAAA,EAAAA,IAAe,UAAWH,GACzC,GAA+BF,EAAAA,EAAAA,IAAiBE,GAA1BE,GAAtB,EAAQQ,WAAR,aACA,OAAuBC,EAAAA,EAAAA,KACrBN,EAAAA,EAAAA,IADwB,gBAGtBR,IAAAA,EACAa,WAAWJ,EAAAA,EAAAA,IAAG,iBAAkBN,EAAMU,YACnCR,GALmB,IAMtB,MAAOH,IAGZ,IACDJ,EAAQ,YAAc,S","sources":["components/LoginForm/LoginForm.jsx","components/pages/Login.jsx","../node_modules/@chakra-ui/layout/src/container.tsx","../node_modules/@chakra-ui/layout/src/heading.tsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/authOperations';\nimport { FormControl, FormLabel, Input, Button, Box } from '@chakra-ui/react';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Box as=\"form\" onSubmit={handleSubmit} py=\"4\" mx=\"auto\">\n      <FormControl id=\"email\" isRequired>\n        <FormLabel _focus={{ color: 'blue.600' }}>Email</FormLabel>\n        <Input\n          placeholder=\"* Enter your email adress\"\n          width=\"100%\"\n          type=\"email\"\n          name=\"email\"\n        />\n      </FormControl>\n      <FormControl mt=\"10px\" id=\"password\" isRequired>\n        <FormLabel _focus={{ color: 'blue.600' }}>Password</FormLabel>\n        <Input\n          placeholder=\"* Enter your password\"\n          width=\"100%\"\n          type=\"password\"\n          name=\"password\"\n        />\n      </FormControl>\n      <Button mt=\"20px\" colorScheme=\"blue\" variant=\"solid\" type=\"submit\">\n        Log In\n      </Button>\n    </Box>\n  );\n};","import { Container, Box, Heading } from '@chakra-ui/react';\nimport { Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <Container maxW=\"2xl\" centerContent>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <Box padding=\"6\" mt=\"10\">\n        <Heading size=\"xl\">Login to your Phonebook account</Heading>\n        <LoginForm />\n        Don't have an account?{' '}\n        <Link to=\"/register\" style={{ textDecoration: 'underline' }}>\n          Register here.\n        </Link>\n      </Box>\n    </Container>\n  );\n}","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface ContainerProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Container\"> {\n  /**\n   * If `true`, container will center its children\n   * regardless of their width.\n   *\n   * @default false\n   */\n  centerContent?: boolean\n}\n\n/**\n * Layout component used to wrap app or website content\n *\n * It sets `margin-left` and `margin-right` to `auto`,\n * to keep its content centered.\n *\n * It also sets a default max-width of `60ch` (60 characters).\n *\n * @see Docs https://chakra-ui.com/docs/components/container\n */\nexport const Container = forwardRef<ContainerProps, \"div\">(function Container(\n  props,\n  ref,\n) {\n  const { className, centerContent, ...rest } = omitThemingProps(props)\n\n  const styles = useStyleConfig(\"Container\", props)\n\n  return (\n    <chakra.div\n      ref={ref}\n      className={cx(\"chakra-container\", className)}\n      {...rest}\n      __css={{\n        ...styles,\n        ...(centerContent && {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }),\n      }}\n    />\n  )\n})\n\nContainer.displayName = \"Container\"\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface HeadingProps\n  extends HTMLChakraProps<\"h2\">,\n    ThemingProps<\"Heading\"> {}\n\n/**\n * `Heading` is used to render semantic HTML heading elements.\n *\n * By default, renders as `h2` with themantic size `xl`\n *\n * @see Docs https://chakra-ui.com/docs/components/heading\n */\nexport const Heading = forwardRef<HeadingProps, \"h2\">(function Heading(\n  props,\n  ref,\n) {\n  const styles = useStyleConfig(\"Heading\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.h2\n      ref={ref}\n      className={cx(\"chakra-heading\", props.className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nHeading.displayName = \"Heading\"\n"],"names":["LoginForm","dispatch","useDispatch","as","onSubmit","e","preventDefault","form","currentTarget","logIn","email","elements","value","password","reset","py","mx","id","isRequired","_focus","color","I","placeholder","width","type","name","mt","colorScheme","variant","Login","maxW","centerContent","Helmet","padding","size","to","style","textDecoration","props","forwardRef","className","omitThemingProps","rest","styles","div","__css","useStyleConfig","Container","chakra","cx","flexDirection","alignItems","displayName","h2","Heading"],"sourceRoot":""}