{"version":3,"file":"static/js/614.1a6653c4.chunk.js","mappings":"6VAKaA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAgCC,EAAAA,EAAAA,UAAS,CACvCC,KAAM,GACNC,MAAO,GACPC,SAAU,KAHZ,eAAOC,EAAP,KAAiBC,EAAjB,KAYMC,EAAe,SAAAC,GACnBF,GAAY,kBAAKD,GAAN,cAAiBG,EAAEC,OAAOP,KAAOM,EAAEC,OAAOC,QACtD,EAED,OACE,UAAC,KAAD,CAAKC,GAAG,OAAOC,SAXI,SAAAJ,GACnBA,EAAEK,iBACFd,GAASe,EAAAA,EAAAA,IAAST,IAClBC,EAAY,CAAEJ,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAC9C,EAOwCW,GAAG,IAAIC,GAAG,OAAjD,WACE,UAAC,KAAD,CAAaC,GAAG,OAAOC,YAAU,EAAjC,WACE,SAAC,IAAD,CAAWC,MAAO,CAAEC,MAAO,YAA3B,uBACA,SAAC,EAAAC,EAAD,CACEC,YAAY,wBACZC,MAAM,OACNC,KAAK,OACLtB,KAAK,OACLQ,MAAOL,EAASH,KAChBuB,SAAUlB,QAGd,UAAC,KAAD,CAAamB,GAAG,OAAOT,GAAG,QAAQC,YAAU,EAA5C,WACE,SAAC,IAAD,CAAWC,MAAO,CAAEC,MAAO,YAA3B,oBACA,SAAC,EAAAC,EAAD,CACEC,YAAY,4BACZC,MAAM,OACNC,KAAK,QACLtB,KAAK,QACLQ,MAAOL,EAASF,MAChBsB,SAAUlB,QAGd,UAAC,KAAD,CAAamB,GAAG,OAAOT,GAAG,WAAWC,YAAU,EAA/C,WACE,SAAC,IAAD,CAAWC,MAAO,CAAEC,MAAO,YAA3B,uBACA,SAAC,EAAAC,EAAD,CACEC,YAAY,wBACZC,MAAM,OACNC,KAAK,WACLtB,KAAK,WACLQ,MAAOL,EAASD,SAChBqB,SAAUlB,QAGd,SAAC,IAAD,CAAQmB,GAAG,OAAOC,YAAY,OAAOC,QAAQ,QAAQJ,KAAK,SAA1D,wBAKL,EC1Dc,SAASK,IACtB,OACE,UAAC,IAAD,CAAWC,KAAK,MAAMC,eAAa,EAAnC,WACE,SAACC,EAAA,EAAD,WACE,+CAEF,UAAC,KAAD,CAAKC,QAAQ,IAAIP,GAAG,KAApB,WACE,SAAC,IAAD,CAASQ,KAAK,KAAd,6CACA,SAACpC,EAAD,IAFF,2BAG2B,KACzB,SAAC,KAAD,CAAMqC,GAAG,SAASC,MAAO,CAAEC,eAAgB,aAA3C,+BAMP,C,2KCVGC,GAAYC,EAAAA,EAAAA,IAAW,SAAoBC,EAAOT,GAClD,IAAF,GAA8CU,EAAAA,EAAAA,IAAiBD,GAAvDE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,cAAkBC,GAArC,YACMC,GAASC,EAAAA,EAAAA,IAAe,YAAaN,GAC3C,OAAuBO,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,KADwB,gBAGtBjB,IAAAA,EACAW,WAAWO,EAAAA,EAAAA,IAAG,mBAAoBP,IAC/BE,GALmB,IAMtBM,OAAK,kBACAL,GACAF,GAAiB,CAClBQ,QAAS,OACTC,cAAe,SACf,WAAY,aAKrB,IACDd,EAAU,YAAc,W,2JCpBpBA,GAAUC,EAAAA,EAAAA,IAAW,SAAkBI,EAAOH,GAC9C,IAAIE,GAASI,EAAAA,EAAAA,IAAe,UAAWH,GACzC,GAA+BF,EAAAA,EAAAA,IAAiBE,GAA1BE,GAAtB,EAAQQ,WAAR,aACA,OAAuBC,EAAAA,EAAAA,KACrBN,EAAAA,EAAAA,IADwB,gBAGtBR,IAAAA,EACAa,WAAWJ,EAAAA,EAAAA,IAAG,iBAAkBN,EAAMU,YACnCR,GALmB,IAMtB,MAAOH,IAGZ,IACDJ,EAAQ,YAAc,S","sources":["components/RegisterForm/RegisterForm.jsx","components/pages/Register.jsx","../node_modules/@chakra-ui/layout/src/container.tsx","../node_modules/@chakra-ui/layout/src/heading.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/authOperations';\nimport { Input, Button, FormControl, FormLabel, Box } from '@chakra-ui/react';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [userData, setUserData] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(register(userData));\n    setUserData({ name: '', email: '', password: '' });\n  };\n\n  const handleChange = e => {\n    setUserData({ ...userData, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <Box as=\"form\" onSubmit={handleSubmit} py=\"4\" mx=\"auto\">\n      <FormControl id=\"name\" isRequired>\n        <FormLabel focus={{ color: 'blue.600' }}>Username</FormLabel>\n        <Input\n          placeholder=\"* Enter your username\"\n          width=\"100%\"\n          type=\"text\"\n          name=\"name\"\n          value={userData.name}\n          onChange={handleChange}\n        />\n      </FormControl>\n      <FormControl mt=\"10px\" id=\"email\" isRequired>\n        <FormLabel focus={{ color: 'blue.600' }}>Email</FormLabel>\n        <Input\n          placeholder=\"* Enter your email adress\"\n          width=\"100%\"\n          type=\"email\"\n          name=\"email\"\n          value={userData.email}\n          onChange={handleChange}\n        />\n      </FormControl>\n      <FormControl mt=\"10px\" id=\"password\" isRequired>\n        <FormLabel focus={{ color: 'blue.600' }}>Password</FormLabel>\n        <Input\n          placeholder=\"* Enter your password\"\n          width=\"100%\"\n          type=\"password\"\n          name=\"password\"\n          value={userData.password}\n          onChange={handleChange}\n        />\n      </FormControl>\n      <Button mt=\"20px\" colorScheme=\"blue\" variant=\"solid\" type=\"submit\">\n        Register\n      </Button>\n    </Box>\n  );\n};","import { Container, Box, Heading } from '@chakra-ui/react';\nimport { Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <Container maxW=\"2xl\" centerContent>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <Box padding=\"6\" mt=\"10\">\n        <Heading size=\"xl\">Create a new Phonebook account</Heading>\n        <RegisterForm />\n        Already have an account?{' '}\n        <Link to=\"/login\" style={{ textDecoration: 'underline' }}>\n          Log in here.\n        </Link>\n      </Box>\n    </Container>\n  );\n}","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface ContainerProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Container\"> {\n  /**\n   * If `true`, container will center its children\n   * regardless of their width.\n   *\n   * @default false\n   */\n  centerContent?: boolean\n}\n\n/**\n * Layout component used to wrap app or website content\n *\n * It sets `margin-left` and `margin-right` to `auto`,\n * to keep its content centered.\n *\n * It also sets a default max-width of `60ch` (60 characters).\n *\n * @see Docs https://chakra-ui.com/docs/components/container\n */\nexport const Container = forwardRef<ContainerProps, \"div\">(function Container(\n  props,\n  ref,\n) {\n  const { className, centerContent, ...rest } = omitThemingProps(props)\n\n  const styles = useStyleConfig(\"Container\", props)\n\n  return (\n    <chakra.div\n      ref={ref}\n      className={cx(\"chakra-container\", className)}\n      {...rest}\n      __css={{\n        ...styles,\n        ...(centerContent && {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }),\n      }}\n    />\n  )\n})\n\nContainer.displayName = \"Container\"\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface HeadingProps\n  extends HTMLChakraProps<\"h2\">,\n    ThemingProps<\"Heading\"> {}\n\n/**\n * `Heading` is used to render semantic HTML heading elements.\n *\n * By default, renders as `h2` with themantic size `xl`\n *\n * @see Docs https://chakra-ui.com/docs/components/heading\n */\nexport const Heading = forwardRef<HeadingProps, \"h2\">(function Heading(\n  props,\n  ref,\n) {\n  const styles = useStyleConfig(\"Heading\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.h2\n      ref={ref}\n      className={cx(\"chakra-heading\", props.className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nHeading.displayName = \"Heading\"\n"],"names":["RegisterForm","dispatch","useDispatch","useState","name","email","password","userData","setUserData","handleChange","e","target","value","as","onSubmit","preventDefault","register","py","mx","id","isRequired","focus","color","I","placeholder","width","type","onChange","mt","colorScheme","variant","Register","maxW","centerContent","Helmet","padding","size","to","style","textDecoration","props","forwardRef","className","omitThemingProps","rest","styles","div","__css","useStyleConfig","Container","chakra","cx","flexDirection","alignItems","displayName","h2","Heading"],"sourceRoot":""}